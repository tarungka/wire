version: "3.3"
networks:
  knetwork:
    driver: bridge

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    # network_mode: "host"
    networks:
      - knetwork

  kafka1:
    image: confluentinc/cp-server:7.0.1
    hostname: kafka1
    container_name: kafka1
    # network_mode: "host"
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS_ENABLE: 1
    networks:
      - knetwork

  kadmin:
    image: kadmin:0.0.2
    hostname: kadmin
    container_name: kadmin
    depends_on:
      - zookeeper
      - kafka1
    environment:
      - BOOTSTRAP_SERVER=kafka1:29092
      - TOPICS=poc.topic,test,poc.topic.reply
    # network_mode: bridge
    networks:
      - knetwork

  mongo-es-connector:
    image: search-pipeline:0.0.0
    hostname: mongo-es-connector
    container_name: mongo-es-connector
    depends_on:
      - zookeeper
      - kafka1
      - kadmin
    environment:
      - MONGODB_URI=
      - KAFKA_BOOTSTRAP_SERVERS=kafka1:29092
      - CONTENT_SERVICE_NAME=user
      - INDEX_NAME=test-index
      - ES_CLOUD_ID=
      - ES_API_KEY=
    networks:
      - knetwork
